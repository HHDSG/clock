; .\clock.SRC generated from: clock.c
; COMPILER INVOKED BY:
;        F:\Program Files\keil4\C51\BIN\C51.EXE clock.c BROWSE DEBUG OBJECTEXTEND SRC(.\clock.SRC)

$NOMOD51

NAME	CLOCK

P0M1	DATA	093H
P1M0	DATA	092H
ACC7	BIT	0E0H.7
P2M0	DATA	096H
P1M1	DATA	091H
P0	DATA	080H
P3M0	DATA	0B2H
P2M1	DATA	095H
P1	DATA	090H
P4M0	DATA	0B4H
P3M1	DATA	0B1H
P2	DATA	0A0H
P5M0	DATA	0CAH
P4M1	DATA	0B3H
P3	DATA	0B0H
P5M1	DATA	0C9H
P4	DATA	0C0H
T0	BIT	0B0H.4
AC	BIT	0D0H.6
P5	DATA	0C8H
T1	BIT	0B0H.5
EA	BIT	0A8H.7
SPCTL	DATA	0CEH
CF	BIT	0D8H.7
CH	DATA	0F9H
FE	BIT	098H.7
EADC	BIT	0A8H.5
IE	DATA	0A8H
CL	DATA	0E9H
IAP_CMD	DATA	0C5H
CCAP0H	DATA	0FAH
CEX0	BIT	090H.3
ADCIN0	BIT	090H.0
CCAP1H	DATA	0FBH
CEX1	BIT	090H.4
ADCIN1	BIT	090H.1
ADCIN2	BIT	090H.2
ADC_RES	DATA	0BDH
IP2H	DATA	0B6H
BRTCLKO	BIT	090H.0
SPISS	BIT	090H.4
ADCIN3	BIT	090H.3
CCAP0L	DATA	0EAH
CR	BIT	0D8H.6
ADCIN4	BIT	090H.4
CCAP1L	DATA	0EBH
CCAPM0	DATA	0DAH
P4CEX0	BIT	0C0H.2
RD	BIT	0B0H.7
ADCIN5	BIT	090H.5
CCAPM1	DATA	0DBH
P4CEX1	BIT	0C0H.3
ADCIN6	BIT	090H.6
ES	BIT	0A8H.4
ADCIN7	BIT	090H.7
PADC	BIT	0B8H.5
IP	DATA	0B8H
P4SPISS	BIT	0C0H.0
RI	BIT	098H.0
INT0	BIT	0B0H.2
SPISCLK	BIT	090H.7
CY	BIT	0D0H.7
TI	BIT	098H.1
INT1	BIT	0B0H.3
CLK_DIV	DATA	097H
IAP_ADDRH	DATA	0C3H
P4SPISCLK	BIT	0C0H.3
RXD2	BIT	090H.2
PS	BIT	0B8H.4
TXD2	BIT	090H.3
SP	DATA	081H
CMOD	DATA	0D9H
CCON	DATA	0D8H
IAP_ADDRL	DATA	0C4H
PPCA	BIT	0B8H.7
OV	BIT	0D0H.2
P4RXD2	BIT	0C0H.2
SPIMOSI	BIT	090H.5
SPIMISO	BIT	090H.6
P4TXD2	BIT	0C0H.3
WR	BIT	0B0H.6
ELVD	BIT	0A8H.6
P4SPIMOSI	BIT	0C0H.1
P4SPIMISO	BIT	0C0H.2
P4SW	DATA	0BBH
T0CLKO	BIT	0B0H.4
T1CLKO	BIT	0B0H.5
P00	BIT	080H.0
ADC_CONTR	DATA	0BCH
SBUF	DATA	099H
P10	BIT	090H.0
P01	BIT	080H.1
PCON	DATA	087H
P20	BIT	0A0H.0
P11	BIT	090H.1
P02	BIT	080H.2
P30	BIT	0B0H.0
P21	BIT	0A0H.1
P12	BIT	090H.2
P03	BIT	080H.3
SCON	DATA	098H
P40	BIT	0C0H.0
P31	BIT	0B0H.1
P22	BIT	0A0H.2
P13	BIT	090H.3
P04	BIT	080H.4
WAKE_CLKO	DATA	08FH
TMOD	DATA	089H
TCON	DATA	088H
P50	BIT	0C8H.0
P41	BIT	0C0H.1
P32	BIT	0B0H.2
P23	BIT	0A0H.3
P14	BIT	090H.4
P05	BIT	080H.5
P51	BIT	0C8H.1
P42	BIT	0C0H.2
P33	BIT	0B0H.3
P24	BIT	0A0H.4
P15	BIT	090H.5
P06	BIT	080H.6
PLVD	BIT	0B8H.6
P52	BIT	0C8H.2
P43	BIT	0C0H.3
P34	BIT	0B0H.4
P25	BIT	0A0H.5
P16	BIT	090H.6
P07	BIT	080H.7
P53	BIT	0C8H.3
P44	BIT	0C0H.4
P35	BIT	0B0H.5
P26	BIT	0A0H.6
P17	BIT	090H.7
P45	BIT	0C0H.5
P36	BIT	0B0H.6
P27	BIT	0A0H.7
P46	BIT	0C0H.6
P37	BIT	0B0H.7
P47	BIT	0C0H.7
IE0	BIT	088H.1
BUS_SPEED	DATA	0A1H
IE1	BIT	088H.3
IE2	DATA	0AFH
AUXR	DATA	08EH
B	DATA	0F0H
IAP_CONTR	DATA	0C7H
ACC	DATA	0E0H
ET0	BIT	0A8H.1
TF0	BIT	088H.5
ET1	BIT	0A8H.3
TF1	BIT	088H.7
IP2	DATA	0B5H
RB8	BIT	098H.2
TH0	DATA	08CH
TH1	DATA	08DH
IT0	BIT	088H.0
EX0	BIT	0A8H.0
TB8	BIT	098H.3
IT1	BIT	088H.2
EX1	BIT	0A8H.2
P	BIT	0D0H.0
SM0	BIT	098H.7
TL0	DATA	08AH
SM1	BIT	098H.6
TL1	DATA	08BH
ECI	BIT	090H.2
SM2	BIT	098H.5
PT0	BIT	0B8H.1
PT1	BIT	0B8H.3
RS0	BIT	0D0H.3
IAP_DATA	DATA	0C2H
TR0	BIT	088H.4
P4ECI	BIT	0C0H.1
RS1	BIT	0D0H.4
TR1	BIT	088H.6
PX0	BIT	0B8H.0
WDT_CONTR	DATA	0C1H
PX1	BIT	0B8H.2
PCA_PWM0	DATA	0F2H
PCA_PWM1	DATA	0F3H
P1ASF	DATA	09DH
DPH	DATA	083H
ADC_RESL	DATA	0BEH
DPL	DATA	082H
SPSTAT	DATA	0CDH
IPH	DATA	0B7H
S2BUF	DATA	09BH
EX_LVD	BIT	0C0H.6
REN	BIT	098H.4
S2CON	DATA	09AH
BRT	DATA	09CH
SADEN	DATA	0B9H
RXD	BIT	0B0H.0
SADDR	DATA	0A9H
TXD	BIT	0B0H.1
IAP_TRIG	DATA	0C6H
AUXR1	DATA	0A2H
F0	BIT	0D0H.5
ACC0	BIT	0E0H.0
ACC1	BIT	0E0H.1
RST	BIT	0C0H.7
ACC2	BIT	0E0H.2
ACC3	BIT	0E0H.3
PSW	DATA	0D0H
ACC4	BIT	0E0H.4
CCF0	BIT	0D8H.0
ACC5	BIT	0E0H.5
CCF1	BIT	0D8H.1
SPDAT	DATA	0CFH
P0M0	DATA	094H
ACC6	BIT	0E0H.6
?PR?main?CLOCK       SEGMENT CODE 
?PR?Uart_Isr?CLOCK   SEGMENT CODE 
?PR?_SendData?CLOCK  SEGMENT CODE 
?BI?CLOCK            SEGMENT BIT 
	EXTRN	CODE (?C_STARTUP)
	PUBLIC	busy
	PUBLIC	_SendData
	PUBLIC	Uart_Isr
	PUBLIC	main

	RSEG  ?BI?CLOCK
           busy:   DBIT   1
; #include<STC12C5A.h>
; #define FSOC 5443000L
; #define BAUD 2400
; 
; typedef unsigned char BYTE;
; 
; bit busy;
; 
; void SendData(BYTE dat);
; 
; int main()

	RSEG  ?PR?main?CLOCK
main:
	USING	0
			; SOURCE LINE # 11
; {
			; SOURCE LINE # 12
; 	SCON=0x50;
			; SOURCE LINE # 13
	MOV  	SCON,#050H
; 	TMOD = 0x20;  //八位自动重装
			; SOURCE LINE # 14
	MOV  	TMOD,#020H
; 	TH1 = (int)(256-(FSOC/12.0/32/BAUD));
			; SOURCE LINE # 15
	MOV  	TH1,#0FAH
; 	TL1 = TH1;
			; SOURCE LINE # 16
	MOV  	TL1,TH1
; 	TR1=1;
			; SOURCE LINE # 17
	SETB 	TR1
; 	ES=1;
			; SOURCE LINE # 18
	SETB 	ES
; 	EA=1;
			; SOURCE LINE # 19
	SETB 	EA
; #pragma ASM
; mov a,r4	
	  mov a,r4	
?C0001:
; #pragma ENDASM
; 	while(1)
			; SOURCE LINE # 23
; 	{
			; SOURCE LINE # 24
; 		P10=1;
			; SOURCE LINE # 25
	SETB 	P10
; 		P11=0;
			; SOURCE LINE # 26
	CLR  	P11
; 		SendData(CCAP0H);
			; SOURCE LINE # 27
	MOV  	R7,CCAP0H
	LCALL	_SendData
; 		SendData('\n');
			; SOURCE LINE # 28
	MOV  	R7,#0AH
	LCALL	_SendData
; 	
; 	}
			; SOURCE LINE # 30
	SJMP 	?C0001
; END OF main

CSEG	AT	00023H
	LJMP	Uart_Isr

; 	return 0;
; }
; 
; void Uart_Isr() interrupt 4 using 1

	RSEG  ?PR?Uart_Isr?CLOCK
	USING	1
Uart_Isr:
			; SOURCE LINE # 34
; {
; 	if(RI)
			; SOURCE LINE # 36
	JNB  	RI,?C0004
; 	{
			; SOURCE LINE # 37
; 		RI=0;
			; SOURCE LINE # 38
	CLR  	RI
; 	}
			; SOURCE LINE # 39
?C0004:
; 	if(TI)
			; SOURCE LINE # 40
	JNB  	TI,?C0006
; 	{
			; SOURCE LINE # 41
; 		TI=0;
			; SOURCE LINE # 42
	CLR  	TI
; 		busy = 0;
			; SOURCE LINE # 43
	CLR  	busy
; 	}
			; SOURCE LINE # 44
; }
			; SOURCE LINE # 45
?C0006:
	RETI 	
; END OF Uart_Isr

; 
; void SendData(BYTE dat)

	RSEG  ?PR?_SendData?CLOCK
_SendData:
			; SOURCE LINE # 47
;---- Variable 'dat?240' assigned to Register 'R7' ----
; {
			; SOURCE LINE # 48
?C0007:
; 	while(busy);
			; SOURCE LINE # 49
	JB   	busy,?C0007
?C0008:
; 	busy=1;
			; SOURCE LINE # 50
	SETB 	busy
; 	SBUF=dat;
			; SOURCE LINE # 51
	MOV  	SBUF,R7
; }			; SOURCE LINE # 52
	RET  	
; END OF _SendData

	END
